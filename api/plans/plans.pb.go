// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: plans/plans.proto

package plans

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DataUnitType int32

const (
	DataUnitType_B  DataUnitType = 0
	DataUnitType_KB DataUnitType = 1
	DataUnitType_MB DataUnitType = 2
	DataUnitType_GB DataUnitType = 3
	DataUnitType_TB DataUnitType = 4
)

// Enum value maps for DataUnitType.
var (
	DataUnitType_name = map[int32]string{
		0: "B",
		1: "KB",
		2: "MB",
		3: "GB",
		4: "TB",
	}
	DataUnitType_value = map[string]int32{
		"B":  0,
		"KB": 1,
		"MB": 2,
		"GB": 3,
		"TB": 4,
	}
)

func (x DataUnitType) Enum() *DataUnitType {
	p := new(DataUnitType)
	*p = x
	return p
}

func (x DataUnitType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataUnitType) Descriptor() protoreflect.EnumDescriptor {
	return file_plans_plans_proto_enumTypes[0].Descriptor()
}

func (DataUnitType) Type() protoreflect.EnumType {
	return &file_plans_plans_proto_enumTypes[0]
}

func (x DataUnitType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataUnitType.Descriptor instead.
func (DataUnitType) EnumDescriptor() ([]byte, []int) {
	return file_plans_plans_proto_rawDescGZIP(), []int{0}
}

type SpeedType int32

const (
	SpeedType_BytePerSecond     SpeedType = 0
	SpeedType_BitPerSecond      SpeedType = 1
	SpeedType_KiloBitPerSecond  SpeedType = 2
	SpeedType_KiloBytePerSecond SpeedType = 3
	SpeedType_MegaBitPerSecond  SpeedType = 4
	SpeedType_GigaBitPerSecond  SpeedType = 5
	SpeedType_MegaBytePerSecond SpeedType = 6
	SpeedType_GigaBytePerSecond SpeedType = 7
)

// Enum value maps for SpeedType.
var (
	SpeedType_name = map[int32]string{
		0: "BytePerSecond",
		1: "BitPerSecond",
		2: "KiloBitPerSecond",
		3: "KiloBytePerSecond",
		4: "MegaBitPerSecond",
		5: "GigaBitPerSecond",
		6: "MegaBytePerSecond",
		7: "GigaBytePerSecond",
	}
	SpeedType_value = map[string]int32{
		"BytePerSecond":     0,
		"BitPerSecond":      1,
		"KiloBitPerSecond":  2,
		"KiloBytePerSecond": 3,
		"MegaBitPerSecond":  4,
		"GigaBitPerSecond":  5,
		"MegaBytePerSecond": 6,
		"GigaBytePerSecond": 7,
	}
)

func (x SpeedType) Enum() *SpeedType {
	p := new(SpeedType)
	*p = x
	return p
}

func (x SpeedType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SpeedType) Descriptor() protoreflect.EnumDescriptor {
	return file_plans_plans_proto_enumTypes[1].Descriptor()
}

func (SpeedType) Type() protoreflect.EnumType {
	return &file_plans_plans_proto_enumTypes[1]
}

func (x SpeedType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SpeedType.Descriptor instead.
func (SpeedType) EnumDescriptor() ([]byte, []int) {
	return file_plans_plans_proto_rawDescGZIP(), []int{1}
}

type Plan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateCode string `protobuf:"bytes,1,opt,name=stateCode,proto3" json:"stateCode,omitempty"`
}

func (x *Plan) Reset() {
	*x = Plan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plans_plans_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plan) ProtoMessage() {}

func (x *Plan) ProtoReflect() protoreflect.Message {
	mi := &file_plans_plans_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plan.ProtoReflect.Descriptor instead.
func (*Plan) Descriptor() ([]byte, []int) {
	return file_plans_plans_proto_rawDescGZIP(), []int{0}
}

func (x *Plan) GetStateCode() string {
	if x != nil {
		return x.StateCode
	}
	return ""
}

type FUPPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortSpeed     *PortSpeedType `protobuf:"bytes,1,opt,name=portSpeed,proto3" json:"portSpeed,omitempty"`
	PlanRentalINR int32          `protobuf:"varint,2,opt,name=planRentalINR,proto3" json:"planRentalINR,omitempty"`
	DataUsage     *DataUsageType `protobuf:"bytes,3,opt,name=dataUsage,proto3" json:"dataUsage,omitempty"`
	AfterFUP      *PortSpeedType `protobuf:"bytes,4,opt,name=afterFUP,proto3" json:"afterFUP,omitempty"`
}

func (x *FUPPlanResponse) Reset() {
	*x = FUPPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plans_plans_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FUPPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FUPPlanResponse) ProtoMessage() {}

func (x *FUPPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plans_plans_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FUPPlanResponse.ProtoReflect.Descriptor instead.
func (*FUPPlanResponse) Descriptor() ([]byte, []int) {
	return file_plans_plans_proto_rawDescGZIP(), []int{1}
}

func (x *FUPPlanResponse) GetPortSpeed() *PortSpeedType {
	if x != nil {
		return x.PortSpeed
	}
	return nil
}

func (x *FUPPlanResponse) GetPlanRentalINR() int32 {
	if x != nil {
		return x.PlanRentalINR
	}
	return 0
}

func (x *FUPPlanResponse) GetDataUsage() *DataUsageType {
	if x != nil {
		return x.DataUsage
	}
	return nil
}

func (x *FUPPlanResponse) GetAfterFUP() *PortSpeedType {
	if x != nil {
		return x.AfterFUP
	}
	return nil
}

type PortSpeedType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Speed        int32     `protobuf:"varint,1,opt,name=speed,proto3" json:"speed,omitempty"`
	DataUnitType SpeedType `protobuf:"varint,2,opt,name=dataUnitType,proto3,enum=SpeedType" json:"dataUnitType,omitempty"`
}

func (x *PortSpeedType) Reset() {
	*x = PortSpeedType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plans_plans_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortSpeedType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortSpeedType) ProtoMessage() {}

func (x *PortSpeedType) ProtoReflect() protoreflect.Message {
	mi := &file_plans_plans_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortSpeedType.ProtoReflect.Descriptor instead.
func (*PortSpeedType) Descriptor() ([]byte, []int) {
	return file_plans_plans_proto_rawDescGZIP(), []int{2}
}

func (x *PortSpeedType) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *PortSpeedType) GetDataUnitType() SpeedType {
	if x != nil {
		return x.DataUnitType
	}
	return SpeedType_BytePerSecond
}

type DataUsageType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataAmount   int32        `protobuf:"varint,1,opt,name=dataAmount,proto3" json:"dataAmount,omitempty"`
	DataUnitType DataUnitType `protobuf:"varint,2,opt,name=dataUnitType,proto3,enum=DataUnitType" json:"dataUnitType,omitempty"`
}

func (x *DataUsageType) Reset() {
	*x = DataUsageType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plans_plans_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataUsageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataUsageType) ProtoMessage() {}

func (x *DataUsageType) ProtoReflect() protoreflect.Message {
	mi := &file_plans_plans_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataUsageType.ProtoReflect.Descriptor instead.
func (*DataUsageType) Descriptor() ([]byte, []int) {
	return file_plans_plans_proto_rawDescGZIP(), []int{3}
}

func (x *DataUsageType) GetDataAmount() int32 {
	if x != nil {
		return x.DataAmount
	}
	return 0
}

func (x *DataUsageType) GetDataUnitType() DataUnitType {
	if x != nil {
		return x.DataUnitType
	}
	return DataUnitType_B
}

var File_plans_plans_proto protoreflect.FileDescriptor

var file_plans_plans_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x24, 0x0a, 0x04, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xbf, 0x01, 0x0a, 0x0f, 0x46, 0x55,
	0x50, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a,
	0x09, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x70,
	0x6c, 0x61, 0x6e, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x49, 0x4e, 0x52, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x49, 0x4e,
	0x52, 0x12, 0x2c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x2a, 0x0a, 0x08, 0x61, 0x66, 0x74, 0x65, 0x72, 0x46, 0x55, 0x50, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x08, 0x61, 0x66, 0x74, 0x65, 0x72, 0x46, 0x55, 0x50, 0x22, 0x55, 0x0a, 0x0d, 0x50,
	0x6f, 0x72, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x12, 0x2e, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x55, 0x6e, 0x69, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x55, 0x6e, 0x69, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x62, 0x0a, 0x0d, 0x44, 0x61, 0x74, 0x61, 0x55, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x55, 0x6e, 0x69, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x55, 0x6e, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x55, 0x6e,
	0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2a, 0x35, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x55, 0x6e,
	0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x05, 0x0a, 0x01, 0x42, 0x10, 0x00, 0x12, 0x06, 0x0a,
	0x02, 0x4b, 0x42, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x4d, 0x42, 0x10, 0x02, 0x12, 0x06, 0x0a,
	0x02, 0x47, 0x42, 0x10, 0x03, 0x12, 0x06, 0x0a, 0x02, 0x54, 0x42, 0x10, 0x04, 0x2a, 0xb7, 0x01,
	0x0a, 0x09, 0x53, 0x70, 0x65, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x42,
	0x79, 0x74, 0x65, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x42, 0x69, 0x74, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x10, 0x01,
	0x12, 0x14, 0x0a, 0x10, 0x4b, 0x69, 0x6c, 0x6f, 0x42, 0x69, 0x74, 0x50, 0x65, 0x72, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x4b, 0x69, 0x6c, 0x6f, 0x42, 0x79,
	0x74, 0x65, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x10, 0x03, 0x12, 0x14, 0x0a,
	0x10, 0x4d, 0x65, 0x67, 0x61, 0x42, 0x69, 0x74, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x69, 0x67, 0x61, 0x42, 0x69, 0x74, 0x50, 0x65,
	0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x65, 0x67,
	0x61, 0x42, 0x79, 0x74, 0x65, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x10, 0x06,
	0x12, 0x15, 0x0a, 0x11, 0x47, 0x69, 0x67, 0x61, 0x42, 0x79, 0x74, 0x65, 0x50, 0x65, 0x72, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x10, 0x07, 0x32, 0x2b, 0x0a, 0x05, 0x50, 0x6c, 0x61, 0x6e, 0x73,
	0x12, 0x22, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x05, 0x2e, 0x50, 0x6c,
	0x61, 0x6e, 0x1a, 0x10, 0x2e, 0x46, 0x55, 0x50, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6a, 0x65, 0x73, 0x73, 0x61, 0x6c, 0x76, 0x61, 0x2f, 0x67, 0x6f, 0x2d, 0x72,
	0x61, 0x69, 0x6c, 0x77, 0x69, 0x72, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x3b, 0x70, 0x6c, 0x61,
	0x6e, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_plans_plans_proto_rawDescOnce sync.Once
	file_plans_plans_proto_rawDescData = file_plans_plans_proto_rawDesc
)

func file_plans_plans_proto_rawDescGZIP() []byte {
	file_plans_plans_proto_rawDescOnce.Do(func() {
		file_plans_plans_proto_rawDescData = protoimpl.X.CompressGZIP(file_plans_plans_proto_rawDescData)
	})
	return file_plans_plans_proto_rawDescData
}

var file_plans_plans_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_plans_plans_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_plans_plans_proto_goTypes = []interface{}{
	(DataUnitType)(0),       // 0: DataUnitType
	(SpeedType)(0),          // 1: SpeedType
	(*Plan)(nil),            // 2: Plan
	(*FUPPlanResponse)(nil), // 3: FUPPlanResponse
	(*PortSpeedType)(nil),   // 4: PortSpeedType
	(*DataUsageType)(nil),   // 5: DataUsageType
}
var file_plans_plans_proto_depIdxs = []int32{
	4, // 0: FUPPlanResponse.portSpeed:type_name -> PortSpeedType
	5, // 1: FUPPlanResponse.dataUsage:type_name -> DataUsageType
	4, // 2: FUPPlanResponse.afterFUP:type_name -> PortSpeedType
	1, // 3: PortSpeedType.dataUnitType:type_name -> SpeedType
	0, // 4: DataUsageType.dataUnitType:type_name -> DataUnitType
	2, // 5: Plans.GetPlan:input_type -> Plan
	3, // 6: Plans.GetPlan:output_type -> FUPPlanResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_plans_plans_proto_init() }
func file_plans_plans_proto_init() {
	if File_plans_plans_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_plans_plans_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plans_plans_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FUPPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plans_plans_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortSpeedType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plans_plans_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataUsageType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plans_plans_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_plans_plans_proto_goTypes,
		DependencyIndexes: file_plans_plans_proto_depIdxs,
		EnumInfos:         file_plans_plans_proto_enumTypes,
		MessageInfos:      file_plans_plans_proto_msgTypes,
	}.Build()
	File_plans_plans_proto = out.File
	file_plans_plans_proto_rawDesc = nil
	file_plans_plans_proto_goTypes = nil
	file_plans_plans_proto_depIdxs = nil
}
